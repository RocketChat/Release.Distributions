name: Build and release official distrubutions
'on':
  schedule:
    - cron: '*/30 * * * *'
jobs:
  parse-payload:
    outputs:
      release: '${{ steps.parsed.outputs.release }}'
      candidate: '${{ steps.parsed.outputs.candidate }}'
    runs-on: ubuntu-latest
    steps:
      - name: Parse delayed job payload and set outputs for other jobs
        id: parsed
        run: |
          &> /dev/null command -v jq || sudo apt install jq -y

          payload='${{ env.DELAYED_JOB_PAYLOAD }}'

          release="$(jq -r .release <<< "$paylaod")"
          candidate="$(jq -r .candidate <<< "$payload")"
          echo "release: $release"
          echo "candidate: $candidate"

          echo "release=$release" >> $GITHUB_OUTPUT
          echo "candidate=$candidate" >> $GITHUB_OUTPUT
      - name: Unschedule this workflow
        uses: cardinalby/unschedule-job-action@v1
        with:
          ghToken: '${{ secrets.GH_TOKEN }}'
    env:
      DELAYED_JOB_CHECKOUT_REF: fdc0de97110445fdf1e388668cef5cad841106ad
      DELAYED_JOB_CHECKOUT_REF_IS_TAG: 'false'
      DELAYED_JOB_WORKFLOW_FILE_PATH: >-
        .github/workflows/build_and_release-fdc0de97110445fdf1e388668cef5cad841106ad.yml
      DELAYED_JOB_WORKFLOW_UNSCHEDULE_TARGET_BRANCH: main
      DELAYED_JOB_PAYLOAD: '{"release":"5.2.0","candidate":false}'
  snap:
    needs:
      - parse-payload
    runs-on: ubuntu-latest
    env:
      TESTS_REPO: debdutdeb/rocketchat-release-test
      DELAYED_JOB_CHECKOUT_REF: fdc0de97110445fdf1e388668cef5cad841106ad
      DELAYED_JOB_CHECKOUT_REF_IS_TAG: 'false'
      DELAYED_JOB_WORKFLOW_FILE_PATH: >-
        .github/workflows/build_and_release-fdc0de97110445fdf1e388668cef5cad841106ad.yml
      DELAYED_JOB_WORKFLOW_UNSCHEDULE_TARGET_BRANCH: main
      DELAYED_JOB_PAYLOAD: '{"release":"5.2.0","candidate":false}'
    steps:
      - name: Parse environment variables
        run: |
          release="${{ needs.parse-payload.outputs.release }}"
          snap_track="${release:0:1}.x"
          candidate="${{ needs.parse-payload.outputs.candidate }}"

          echo "release: $release"
          echo "snap_track: $snap_track"
          echo "candidate: $candidate"

          echo "release=$release" >> $GITHUB_ENV
          echo "snap_track=$snap_track" >> $GITHUB_ENV
          echo "candidate=$candidate" >> $GITHUB_ENV
      - name: Clone release repo
        uses: actions/checkout@v2
      - name: Set build version
        working-directory: official/snap
        run: |
          pwd
          sed -Ei -r '/^version:/ s/ .+/ $release/' ./snap/snapcraft.yaml
      - name: Build snap
        uses: snapcore/action-build@v1
        id: snap-build
        with:
          path: official/snap
          build-info: true
      - name: Check correct  snap path
        run: |
          snap_artifact_path="${{ steps.snap-build.outputs.snap }}"
          echo "snap_artifact_path: $snap_artifact_path"
          echo "snap_artifact_path=$snap_artifact_path" >> $GITHUB_ENV
      - name: Clone tests repo
        uses: actions/checkout@v2
        with:
          repository: '${{ env.TESTS_REPO }}'
          path: ./test_scripts
      - name: Install and test the generated snap
        run: ./test_scripts/snap_install_test.sh "$snap_artifact_path"
      - name: Remove snap
        run: sudo snap remove rocketchat-server
      - name: Test snap updating
        run: ./test_scripts/snap_update_test.sh
