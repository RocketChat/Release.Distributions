name: "Schedule primary build and release workflow"

# TODO use repository dispatch instead
on:
  # schedule:
  #   - cron: "00 18 * * *"
  push: # TODO change this to cron

env:
  TARGET_REPOSITORY: "RocketChat/Rocket.Chat"

jobs:
  prebuild:
    outputs:
      new_release: ${{ steps.parse-environment.outputs.new_release }}
      latest_release: ${{ steps.parse-environment.outputs.latest_release }}
      candidate: ${{ steps.parse-environment.outputs.candidate }}
    runs-on: ubuntu-latest
    steps:
      # clone repository without submodules (as nothing will be built here)
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          submodules: false

      # check if there is a new Release
      # check for latest stable, latest candidate
      # fetch the version and send to the other workflow
      - name: Parse new release
        id: parse-environment
        run: |
          # including release candidates
          latest_release="$(
            git -c 'versionsort.suffix=-' ls-remote -t --exit-code --refs --sort=-v:refname "https://github.com/$TARGET_REPOSITORY" '*' |
              awk -F/ '$NF !~ /beta/ { print $NF; exit }'
          )"
          echo "latest_release=$latest_release" >> $GITHUB_OUTPUT
          new_release() {
            echo "new_release=$1" >> $GITHUB_OUTPUT
          }
          if ! [[ -f .RELEASES ]]; then # no file means first run
            new_release true
          else
            curr="$(tail -1 .RELEASES)" # get the last known release
            if [[ "$curr" == "$latest_release" ]]; then
              new_release false
            else
              new_release true
            fi
          fi

          [[ $latest_release =~ rc$ ]] && candidate=true || candidate=false
          echo "candidate=$candidate" >> $GITHUB_OUTPUT
  
  schedule:
    runs-on: ubuntu-latest
    needs: [prebuild]
    # schedule only if we have a new release
    if: ${{ needs.prebuild.outputs.new_release == 'true' }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Update submodules and .RELEASES
        run: |
          git submodule foreach 'git pull --rebase'
          echo "${{ needs.prebuild.outputs.latest_release }}" >> .RELEASES

      - name: Update repository with new release and build configs
        uses: EndBug/add-and-commit@v7
        with:
          add: .
          message: "Chore: add new release version ${{ steps.parse-environment.outputs.latest_release }}"
          push: true
          authorb_name: Debdut Chakraborty
          author_email: debdutdeb@outlook.com
          commit: --signoff

      - name: Build scheduled job payload
        id: payload
        run: |
          sudo apt install jo -y
          payload_arg=()
          payload_arg+=(release=${{ needs.prebuild.outputs.latest_release }})
          payload_arg+=(candidate=${{ needs.prebuild.outputs.candidate }})
          echo "delayed_job_payload=$(jo "${payload_arg[@]}")" >> $GITHUB_OUTPUT

      - name: Schedule main workflow
        uses: cardinalby/schedule-job-action@v1
        with:
          ghToken: ${{ secrets.GH_TOKEN }}
          templateYmlFile: ".scheduled/build_and_release.yml"
          jobPayload: ${{ steps.payload.outputs.delayed_job_payload }}
          targetBranch: main
