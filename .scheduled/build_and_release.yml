name: "Build and release official distrubutions"

on:
  # schedule:
  #   - cron: "*/1 * * * *"
  workflow_dispatch:

# needed_secrets:
#   - SNAPCRAFT_LOGIN: login credentials for snap store to be able to push the artifact

jobs:
  unschedule:
    runs-on: ubuntu-latest
    steps:
      - name: Unschedule this workflow
        uses: cardinalby/unschedule-job-action@v1
        with:
          ghToken: ${{ secrets.GH_TOKEN }}

  process-payload:
    outputs:
      release: ${{ steps.parsed.outputs.release }}
      candidate: ${{ steps.parsed.outputs.candidate }}
    runs-on: ubuntu-latest
    steps:
      - name: Parse delayed job payload and set outputs for other jobs
        id: parsed
        run: |
          &> /dev/null command -v jq || sudo apt install jq -y

          echo "DELAYED_JOB_PAYLAOD: '$DELAYED_JOB_PAYLOAD'"

          release="$(jq -r .release <<< "$DELAYED_JOB_PEYLAOD")"
          candidate="$(jq -r .candidate <<< "$DELAYED_JOB_PAYLOAD")"
          echo "release: $release"
          echo "candidate: $candidate"

          echo "release=$release" >> $GITHUB_OUTPUT
          echo "candidate=$candidate" >> $GITHUB_OUTPUT

  snap:
    needs: [process-payload]
    runs-on: ubuntu-latest
    env:
      TESTS_REPO: "debdutdeb/rocketchat-release-test"
    steps:
      - name: Parse environment variables
        run: |
          release="${{ needs.process-payload.outputs.release }}"
          snap_track="${release:0:1}.x"
          candidate="${{ needs.process-payload.outputs.candidate }}"

          echo "release: $release"
          echo "snap_track: $snap_track"
          echo "candidate: $candidate"

          echo "release=$release" >> $GITHUB_ENV
          echo "snap_track=$snap_track" >> $GITHUB_ENV
          echo "candidate=$candidate" >> $GITHUB_ENV

      - name: Clone release repo
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Set build version
        working-directory: official/snap
        run: sed -Ei -r "/^version:/ s/ .+/ $release/" ./snap/snapcraft.yaml

      - name: Build snap
        uses: snapcore/action-build@v1
        id: snap-build
        with:
          path: "official/snap"
          build-info: true

      - name: Check correct  snap path
        run: |
          snap_artifact_path="${{ steps.snap-build.outputs.snap }}"
          echo "snap_artifact_path: $snap_artifact_path"
          echo "snap_artifact_path=$snap_artifact_path" >> $GITHUB_ENV

      - name: Clone tests repo
        uses: actions/checkout@v2
        with:
          repository: "${{ env.TESTS_REPO }}"
          path: "./test_scripts"

      - name: Install and test the generated snap
        run: ./test_scripts/snap_install_test.sh "$snap_artifact_path"

      - name: Remove snap
        run: sudo snap remove rocketchat-server

      # - name: Publish snap to edge channel
      #   uses: snapcore/action-publish@v1
      #   with:
      #     store_login: ${{ secrets.SNAPCRAFT_LOGIN }}
      #     snap: ${{ env.snap_artifact_path }}
      #     release: ${{ env.snap_track }}/edge

      - name: Test snap updating
        run: ./test_scripts/snap_update_test.sh

      # - name: Promote edge to candidate
      #   if: env.candidate == 'true'
      #   run: |
      #     # TODO change this to using the environment variable
      #     echo "${{ secrets.SNAPCRAFT_LOGIN }}" | snapcraft login --with -
      #     revision=$(snapcraft list-revisions rocketchat-server --arch amd64 | awk "/$snap_track\/edge/ { print \$1; exit; }")
      #     snapcraft release rocketchat-server $revision $snap_track/candidate
